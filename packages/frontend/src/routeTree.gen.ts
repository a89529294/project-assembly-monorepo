/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/_dashboard/route'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as DashboardBasicInfoRouteImport } from './routes/_dashboard/basic-info/route'
import { Route as DashboardCustomersIndexImport } from './routes/_dashboard/customers/index'
import { Route as DashboardStorageUpdateImport } from './routes/_dashboard/storage/update'
import { Route as DashboardStorageReadImport } from './routes/_dashboard/storage/read'
import { Route as DashboardStorageDeleteImport } from './routes/_dashboard/storage/delete'
import { Route as DashboardStorageCreateImport } from './routes/_dashboard/storage/create'
import { Route as DashboardProductionUpdateImport } from './routes/_dashboard/production/update'
import { Route as DashboardProductionReadImport } from './routes/_dashboard/production/read'
import { Route as DashboardProductionDeleteImport } from './routes/_dashboard/production/delete'
import { Route as DashboardProductionCreateImport } from './routes/_dashboard/production/create'
import { Route as DashboardCustomersCreateImport } from './routes/_dashboard/customers/create'
import { Route as DashboardBasicInfoCompanyInfoImport } from './routes/_dashboard/basic-info/company-info'
import { Route as DashboardCustomersCustomerIdIndexImport } from './routes/_dashboard/customers/$customerId/index'
import { Route as DashboardBasicInfoEmployeesIndexImport } from './routes/_dashboard/basic-info/employees/index'
import { Route as DashboardCustomersCustomerIdProjectsImport } from './routes/_dashboard/customers/$customerId/projects'
import { Route as DashboardBasicInfoErpPermissionsUsersImport } from './routes/_dashboard/basic-info/erp-permissions/users'
import { Route as DashboardBasicInfoErpPermissionsRolesImport } from './routes/_dashboard/basic-info/erp-permissions/roles'
import { Route as DashboardBasicInfoErpPermissionsDepartmentsImport } from './routes/_dashboard/basic-info/erp-permissions/departments'
import { Route as DashboardBasicInfoErpPermissionsDepartmentMembersImport } from './routes/_dashboard/basic-info/erp-permissions/department-members'
import { Route as DashboardBasicInfoErpPermissionsAppMachinePermissionsImport } from './routes/_dashboard/basic-info/erp-permissions/app-machine-permissions'
import { Route as DashboardBasicInfoEmployeesCreateImport } from './routes/_dashboard/basic-info/employees/create'
import { Route as DashboardBasicInfoEmployeesEmployeeIdIndexImport } from './routes/_dashboard/basic-info/employees/$employeeId/index'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardBasicInfoRouteRoute = DashboardBasicInfoRouteImport.update({
  id: '/basic-info',
  path: '/basic-info',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCustomersIndexRoute = DashboardCustomersIndexImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardStorageUpdateRoute = DashboardStorageUpdateImport.update({
  id: '/storage/update',
  path: '/storage/update',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardStorageReadRoute = DashboardStorageReadImport.update({
  id: '/storage/read',
  path: '/storage/read',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardStorageDeleteRoute = DashboardStorageDeleteImport.update({
  id: '/storage/delete',
  path: '/storage/delete',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardStorageCreateRoute = DashboardStorageCreateImport.update({
  id: '/storage/create',
  path: '/storage/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProductionUpdateRoute = DashboardProductionUpdateImport.update({
  id: '/production/update',
  path: '/production/update',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProductionReadRoute = DashboardProductionReadImport.update({
  id: '/production/read',
  path: '/production/read',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProductionDeleteRoute = DashboardProductionDeleteImport.update({
  id: '/production/delete',
  path: '/production/delete',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProductionCreateRoute = DashboardProductionCreateImport.update({
  id: '/production/create',
  path: '/production/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardCustomersCreateRoute = DashboardCustomersCreateImport.update({
  id: '/customers/create',
  path: '/customers/create',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardBasicInfoCompanyInfoRoute =
  DashboardBasicInfoCompanyInfoImport.update({
    id: '/company-info',
    path: '/company-info',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardCustomersCustomerIdIndexRoute =
  DashboardCustomersCustomerIdIndexImport.update({
    id: '/customers/$customerId/',
    path: '/customers/$customerId/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardBasicInfoEmployeesIndexRoute =
  DashboardBasicInfoEmployeesIndexImport.update({
    id: '/employees/',
    path: '/employees/',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardCustomersCustomerIdProjectsRoute =
  DashboardCustomersCustomerIdProjectsImport.update({
    id: '/customers/$customerId/projects',
    path: '/customers/$customerId/projects',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardBasicInfoErpPermissionsUsersRoute =
  DashboardBasicInfoErpPermissionsUsersImport.update({
    id: '/erp-permissions/users',
    path: '/erp-permissions/users',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardBasicInfoErpPermissionsRolesRoute =
  DashboardBasicInfoErpPermissionsRolesImport.update({
    id: '/erp-permissions/roles',
    path: '/erp-permissions/roles',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardBasicInfoErpPermissionsDepartmentsRoute =
  DashboardBasicInfoErpPermissionsDepartmentsImport.update({
    id: '/erp-permissions/departments',
    path: '/erp-permissions/departments',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardBasicInfoErpPermissionsDepartmentMembersRoute =
  DashboardBasicInfoErpPermissionsDepartmentMembersImport.update({
    id: '/erp-permissions/department-members',
    path: '/erp-permissions/department-members',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute =
  DashboardBasicInfoErpPermissionsAppMachinePermissionsImport.update({
    id: '/erp-permissions/app-machine-permissions',
    path: '/erp-permissions/app-machine-permissions',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardBasicInfoEmployeesCreateRoute =
  DashboardBasicInfoEmployeesCreateImport.update({
    id: '/employees/create',
    path: '/employees/create',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

const DashboardBasicInfoEmployeesEmployeeIdIndexRoute =
  DashboardBasicInfoEmployeesEmployeeIdIndexImport.update({
    id: '/employees/$employeeId/',
    path: '/employees/$employeeId/',
    getParentRoute: () => DashboardBasicInfoRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/basic-info': {
      id: '/_dashboard/basic-info'
      path: '/basic-info'
      fullPath: '/basic-info'
      preLoaderRoute: typeof DashboardBasicInfoRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/basic-info/company-info': {
      id: '/_dashboard/basic-info/company-info'
      path: '/company-info'
      fullPath: '/basic-info/company-info'
      preLoaderRoute: typeof DashboardBasicInfoCompanyInfoImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/customers/create': {
      id: '/_dashboard/customers/create'
      path: '/customers/create'
      fullPath: '/customers/create'
      preLoaderRoute: typeof DashboardCustomersCreateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/production/create': {
      id: '/_dashboard/production/create'
      path: '/production/create'
      fullPath: '/production/create'
      preLoaderRoute: typeof DashboardProductionCreateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/production/delete': {
      id: '/_dashboard/production/delete'
      path: '/production/delete'
      fullPath: '/production/delete'
      preLoaderRoute: typeof DashboardProductionDeleteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/production/read': {
      id: '/_dashboard/production/read'
      path: '/production/read'
      fullPath: '/production/read'
      preLoaderRoute: typeof DashboardProductionReadImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/production/update': {
      id: '/_dashboard/production/update'
      path: '/production/update'
      fullPath: '/production/update'
      preLoaderRoute: typeof DashboardProductionUpdateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/storage/create': {
      id: '/_dashboard/storage/create'
      path: '/storage/create'
      fullPath: '/storage/create'
      preLoaderRoute: typeof DashboardStorageCreateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/storage/delete': {
      id: '/_dashboard/storage/delete'
      path: '/storage/delete'
      fullPath: '/storage/delete'
      preLoaderRoute: typeof DashboardStorageDeleteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/storage/read': {
      id: '/_dashboard/storage/read'
      path: '/storage/read'
      fullPath: '/storage/read'
      preLoaderRoute: typeof DashboardStorageReadImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/storage/update': {
      id: '/_dashboard/storage/update'
      path: '/storage/update'
      fullPath: '/storage/update'
      preLoaderRoute: typeof DashboardStorageUpdateImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/customers/': {
      id: '/_dashboard/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof DashboardCustomersIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/basic-info/employees/create': {
      id: '/_dashboard/basic-info/employees/create'
      path: '/employees/create'
      fullPath: '/basic-info/employees/create'
      preLoaderRoute: typeof DashboardBasicInfoEmployeesCreateImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/basic-info/erp-permissions/app-machine-permissions': {
      id: '/_dashboard/basic-info/erp-permissions/app-machine-permissions'
      path: '/erp-permissions/app-machine-permissions'
      fullPath: '/basic-info/erp-permissions/app-machine-permissions'
      preLoaderRoute: typeof DashboardBasicInfoErpPermissionsAppMachinePermissionsImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/basic-info/erp-permissions/department-members': {
      id: '/_dashboard/basic-info/erp-permissions/department-members'
      path: '/erp-permissions/department-members'
      fullPath: '/basic-info/erp-permissions/department-members'
      preLoaderRoute: typeof DashboardBasicInfoErpPermissionsDepartmentMembersImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/basic-info/erp-permissions/departments': {
      id: '/_dashboard/basic-info/erp-permissions/departments'
      path: '/erp-permissions/departments'
      fullPath: '/basic-info/erp-permissions/departments'
      preLoaderRoute: typeof DashboardBasicInfoErpPermissionsDepartmentsImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/basic-info/erp-permissions/roles': {
      id: '/_dashboard/basic-info/erp-permissions/roles'
      path: '/erp-permissions/roles'
      fullPath: '/basic-info/erp-permissions/roles'
      preLoaderRoute: typeof DashboardBasicInfoErpPermissionsRolesImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/basic-info/erp-permissions/users': {
      id: '/_dashboard/basic-info/erp-permissions/users'
      path: '/erp-permissions/users'
      fullPath: '/basic-info/erp-permissions/users'
      preLoaderRoute: typeof DashboardBasicInfoErpPermissionsUsersImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/customers/$customerId/projects': {
      id: '/_dashboard/customers/$customerId/projects'
      path: '/customers/$customerId/projects'
      fullPath: '/customers/$customerId/projects'
      preLoaderRoute: typeof DashboardCustomersCustomerIdProjectsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/basic-info/employees/': {
      id: '/_dashboard/basic-info/employees/'
      path: '/employees'
      fullPath: '/basic-info/employees'
      preLoaderRoute: typeof DashboardBasicInfoEmployeesIndexImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
    '/_dashboard/customers/$customerId/': {
      id: '/_dashboard/customers/$customerId/'
      path: '/customers/$customerId'
      fullPath: '/customers/$customerId'
      preLoaderRoute: typeof DashboardCustomersCustomerIdIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_dashboard/basic-info/employees/$employeeId/': {
      id: '/_dashboard/basic-info/employees/$employeeId/'
      path: '/employees/$employeeId'
      fullPath: '/basic-info/employees/$employeeId'
      preLoaderRoute: typeof DashboardBasicInfoEmployeesEmployeeIdIndexImport
      parentRoute: typeof DashboardBasicInfoRouteImport
    }
  }
}

// Create and export the route tree

interface DashboardBasicInfoRouteRouteChildren {
  DashboardBasicInfoCompanyInfoRoute: typeof DashboardBasicInfoCompanyInfoRoute
  DashboardBasicInfoEmployeesCreateRoute: typeof DashboardBasicInfoEmployeesCreateRoute
  DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute: typeof DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute
  DashboardBasicInfoErpPermissionsDepartmentMembersRoute: typeof DashboardBasicInfoErpPermissionsDepartmentMembersRoute
  DashboardBasicInfoErpPermissionsDepartmentsRoute: typeof DashboardBasicInfoErpPermissionsDepartmentsRoute
  DashboardBasicInfoErpPermissionsRolesRoute: typeof DashboardBasicInfoErpPermissionsRolesRoute
  DashboardBasicInfoErpPermissionsUsersRoute: typeof DashboardBasicInfoErpPermissionsUsersRoute
  DashboardBasicInfoEmployeesIndexRoute: typeof DashboardBasicInfoEmployeesIndexRoute
  DashboardBasicInfoEmployeesEmployeeIdIndexRoute: typeof DashboardBasicInfoEmployeesEmployeeIdIndexRoute
}

const DashboardBasicInfoRouteRouteChildren: DashboardBasicInfoRouteRouteChildren =
  {
    DashboardBasicInfoCompanyInfoRoute: DashboardBasicInfoCompanyInfoRoute,
    DashboardBasicInfoEmployeesCreateRoute:
      DashboardBasicInfoEmployeesCreateRoute,
    DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute:
      DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute,
    DashboardBasicInfoErpPermissionsDepartmentMembersRoute:
      DashboardBasicInfoErpPermissionsDepartmentMembersRoute,
    DashboardBasicInfoErpPermissionsDepartmentsRoute:
      DashboardBasicInfoErpPermissionsDepartmentsRoute,
    DashboardBasicInfoErpPermissionsRolesRoute:
      DashboardBasicInfoErpPermissionsRolesRoute,
    DashboardBasicInfoErpPermissionsUsersRoute:
      DashboardBasicInfoErpPermissionsUsersRoute,
    DashboardBasicInfoEmployeesIndexRoute:
      DashboardBasicInfoEmployeesIndexRoute,
    DashboardBasicInfoEmployeesEmployeeIdIndexRoute:
      DashboardBasicInfoEmployeesEmployeeIdIndexRoute,
  }

const DashboardBasicInfoRouteRouteWithChildren =
  DashboardBasicInfoRouteRoute._addFileChildren(
    DashboardBasicInfoRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardBasicInfoRouteRoute: typeof DashboardBasicInfoRouteRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCustomersCreateRoute: typeof DashboardCustomersCreateRoute
  DashboardProductionCreateRoute: typeof DashboardProductionCreateRoute
  DashboardProductionDeleteRoute: typeof DashboardProductionDeleteRoute
  DashboardProductionReadRoute: typeof DashboardProductionReadRoute
  DashboardProductionUpdateRoute: typeof DashboardProductionUpdateRoute
  DashboardStorageCreateRoute: typeof DashboardStorageCreateRoute
  DashboardStorageDeleteRoute: typeof DashboardStorageDeleteRoute
  DashboardStorageReadRoute: typeof DashboardStorageReadRoute
  DashboardStorageUpdateRoute: typeof DashboardStorageUpdateRoute
  DashboardCustomersIndexRoute: typeof DashboardCustomersIndexRoute
  DashboardCustomersCustomerIdProjectsRoute: typeof DashboardCustomersCustomerIdProjectsRoute
  DashboardCustomersCustomerIdIndexRoute: typeof DashboardCustomersCustomerIdIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardBasicInfoRouteRoute: DashboardBasicInfoRouteRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCustomersCreateRoute: DashboardCustomersCreateRoute,
  DashboardProductionCreateRoute: DashboardProductionCreateRoute,
  DashboardProductionDeleteRoute: DashboardProductionDeleteRoute,
  DashboardProductionReadRoute: DashboardProductionReadRoute,
  DashboardProductionUpdateRoute: DashboardProductionUpdateRoute,
  DashboardStorageCreateRoute: DashboardStorageCreateRoute,
  DashboardStorageDeleteRoute: DashboardStorageDeleteRoute,
  DashboardStorageReadRoute: DashboardStorageReadRoute,
  DashboardStorageUpdateRoute: DashboardStorageUpdateRoute,
  DashboardCustomersIndexRoute: DashboardCustomersIndexRoute,
  DashboardCustomersCustomerIdProjectsRoute:
    DashboardCustomersCustomerIdProjectsRoute,
  DashboardCustomersCustomerIdIndexRoute:
    DashboardCustomersCustomerIdIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/basic-info': typeof DashboardBasicInfoRouteRouteWithChildren
  '/': typeof DashboardIndexRoute
  '/basic-info/company-info': typeof DashboardBasicInfoCompanyInfoRoute
  '/customers/create': typeof DashboardCustomersCreateRoute
  '/production/create': typeof DashboardProductionCreateRoute
  '/production/delete': typeof DashboardProductionDeleteRoute
  '/production/read': typeof DashboardProductionReadRoute
  '/production/update': typeof DashboardProductionUpdateRoute
  '/storage/create': typeof DashboardStorageCreateRoute
  '/storage/delete': typeof DashboardStorageDeleteRoute
  '/storage/read': typeof DashboardStorageReadRoute
  '/storage/update': typeof DashboardStorageUpdateRoute
  '/customers': typeof DashboardCustomersIndexRoute
  '/basic-info/employees/create': typeof DashboardBasicInfoEmployeesCreateRoute
  '/basic-info/erp-permissions/app-machine-permissions': typeof DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute
  '/basic-info/erp-permissions/department-members': typeof DashboardBasicInfoErpPermissionsDepartmentMembersRoute
  '/basic-info/erp-permissions/departments': typeof DashboardBasicInfoErpPermissionsDepartmentsRoute
  '/basic-info/erp-permissions/roles': typeof DashboardBasicInfoErpPermissionsRolesRoute
  '/basic-info/erp-permissions/users': typeof DashboardBasicInfoErpPermissionsUsersRoute
  '/customers/$customerId/projects': typeof DashboardCustomersCustomerIdProjectsRoute
  '/basic-info/employees': typeof DashboardBasicInfoEmployeesIndexRoute
  '/customers/$customerId': typeof DashboardCustomersCustomerIdIndexRoute
  '/basic-info/employees/$employeeId': typeof DashboardBasicInfoEmployeesEmployeeIdIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/basic-info': typeof DashboardBasicInfoRouteRouteWithChildren
  '/': typeof DashboardIndexRoute
  '/basic-info/company-info': typeof DashboardBasicInfoCompanyInfoRoute
  '/customers/create': typeof DashboardCustomersCreateRoute
  '/production/create': typeof DashboardProductionCreateRoute
  '/production/delete': typeof DashboardProductionDeleteRoute
  '/production/read': typeof DashboardProductionReadRoute
  '/production/update': typeof DashboardProductionUpdateRoute
  '/storage/create': typeof DashboardStorageCreateRoute
  '/storage/delete': typeof DashboardStorageDeleteRoute
  '/storage/read': typeof DashboardStorageReadRoute
  '/storage/update': typeof DashboardStorageUpdateRoute
  '/customers': typeof DashboardCustomersIndexRoute
  '/basic-info/employees/create': typeof DashboardBasicInfoEmployeesCreateRoute
  '/basic-info/erp-permissions/app-machine-permissions': typeof DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute
  '/basic-info/erp-permissions/department-members': typeof DashboardBasicInfoErpPermissionsDepartmentMembersRoute
  '/basic-info/erp-permissions/departments': typeof DashboardBasicInfoErpPermissionsDepartmentsRoute
  '/basic-info/erp-permissions/roles': typeof DashboardBasicInfoErpPermissionsRolesRoute
  '/basic-info/erp-permissions/users': typeof DashboardBasicInfoErpPermissionsUsersRoute
  '/customers/$customerId/projects': typeof DashboardCustomersCustomerIdProjectsRoute
  '/basic-info/employees': typeof DashboardBasicInfoEmployeesIndexRoute
  '/customers/$customerId': typeof DashboardCustomersCustomerIdIndexRoute
  '/basic-info/employees/$employeeId': typeof DashboardBasicInfoEmployeesEmployeeIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_dashboard/basic-info': typeof DashboardBasicInfoRouteRouteWithChildren
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/basic-info/company-info': typeof DashboardBasicInfoCompanyInfoRoute
  '/_dashboard/customers/create': typeof DashboardCustomersCreateRoute
  '/_dashboard/production/create': typeof DashboardProductionCreateRoute
  '/_dashboard/production/delete': typeof DashboardProductionDeleteRoute
  '/_dashboard/production/read': typeof DashboardProductionReadRoute
  '/_dashboard/production/update': typeof DashboardProductionUpdateRoute
  '/_dashboard/storage/create': typeof DashboardStorageCreateRoute
  '/_dashboard/storage/delete': typeof DashboardStorageDeleteRoute
  '/_dashboard/storage/read': typeof DashboardStorageReadRoute
  '/_dashboard/storage/update': typeof DashboardStorageUpdateRoute
  '/_dashboard/customers/': typeof DashboardCustomersIndexRoute
  '/_dashboard/basic-info/employees/create': typeof DashboardBasicInfoEmployeesCreateRoute
  '/_dashboard/basic-info/erp-permissions/app-machine-permissions': typeof DashboardBasicInfoErpPermissionsAppMachinePermissionsRoute
  '/_dashboard/basic-info/erp-permissions/department-members': typeof DashboardBasicInfoErpPermissionsDepartmentMembersRoute
  '/_dashboard/basic-info/erp-permissions/departments': typeof DashboardBasicInfoErpPermissionsDepartmentsRoute
  '/_dashboard/basic-info/erp-permissions/roles': typeof DashboardBasicInfoErpPermissionsRolesRoute
  '/_dashboard/basic-info/erp-permissions/users': typeof DashboardBasicInfoErpPermissionsUsersRoute
  '/_dashboard/customers/$customerId/projects': typeof DashboardCustomersCustomerIdProjectsRoute
  '/_dashboard/basic-info/employees/': typeof DashboardBasicInfoEmployeesIndexRoute
  '/_dashboard/customers/$customerId/': typeof DashboardCustomersCustomerIdIndexRoute
  '/_dashboard/basic-info/employees/$employeeId/': typeof DashboardBasicInfoEmployeesEmployeeIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/basic-info'
    | '/'
    | '/basic-info/company-info'
    | '/customers/create'
    | '/production/create'
    | '/production/delete'
    | '/production/read'
    | '/production/update'
    | '/storage/create'
    | '/storage/delete'
    | '/storage/read'
    | '/storage/update'
    | '/customers'
    | '/basic-info/employees/create'
    | '/basic-info/erp-permissions/app-machine-permissions'
    | '/basic-info/erp-permissions/department-members'
    | '/basic-info/erp-permissions/departments'
    | '/basic-info/erp-permissions/roles'
    | '/basic-info/erp-permissions/users'
    | '/customers/$customerId/projects'
    | '/basic-info/employees'
    | '/customers/$customerId'
    | '/basic-info/employees/$employeeId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/basic-info'
    | '/'
    | '/basic-info/company-info'
    | '/customers/create'
    | '/production/create'
    | '/production/delete'
    | '/production/read'
    | '/production/update'
    | '/storage/create'
    | '/storage/delete'
    | '/storage/read'
    | '/storage/update'
    | '/customers'
    | '/basic-info/employees/create'
    | '/basic-info/erp-permissions/app-machine-permissions'
    | '/basic-info/erp-permissions/department-members'
    | '/basic-info/erp-permissions/departments'
    | '/basic-info/erp-permissions/roles'
    | '/basic-info/erp-permissions/users'
    | '/customers/$customerId/projects'
    | '/basic-info/employees'
    | '/customers/$customerId'
    | '/basic-info/employees/$employeeId'
  id:
    | '__root__'
    | '/_dashboard'
    | '/login'
    | '/_dashboard/basic-info'
    | '/_dashboard/'
    | '/_dashboard/basic-info/company-info'
    | '/_dashboard/customers/create'
    | '/_dashboard/production/create'
    | '/_dashboard/production/delete'
    | '/_dashboard/production/read'
    | '/_dashboard/production/update'
    | '/_dashboard/storage/create'
    | '/_dashboard/storage/delete'
    | '/_dashboard/storage/read'
    | '/_dashboard/storage/update'
    | '/_dashboard/customers/'
    | '/_dashboard/basic-info/employees/create'
    | '/_dashboard/basic-info/erp-permissions/app-machine-permissions'
    | '/_dashboard/basic-info/erp-permissions/department-members'
    | '/_dashboard/basic-info/erp-permissions/departments'
    | '/_dashboard/basic-info/erp-permissions/roles'
    | '/_dashboard/basic-info/erp-permissions/users'
    | '/_dashboard/customers/$customerId/projects'
    | '/_dashboard/basic-info/employees/'
    | '/_dashboard/customers/$customerId/'
    | '/_dashboard/basic-info/employees/$employeeId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/login"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard/route.tsx",
      "children": [
        "/_dashboard/basic-info",
        "/_dashboard/",
        "/_dashboard/customers/create",
        "/_dashboard/production/create",
        "/_dashboard/production/delete",
        "/_dashboard/production/read",
        "/_dashboard/production/update",
        "/_dashboard/storage/create",
        "/_dashboard/storage/delete",
        "/_dashboard/storage/read",
        "/_dashboard/storage/update",
        "/_dashboard/customers/",
        "/_dashboard/customers/$customerId/projects",
        "/_dashboard/customers/$customerId/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_dashboard/basic-info": {
      "filePath": "_dashboard/basic-info/route.tsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/basic-info/company-info",
        "/_dashboard/basic-info/employees/create",
        "/_dashboard/basic-info/erp-permissions/app-machine-permissions",
        "/_dashboard/basic-info/erp-permissions/department-members",
        "/_dashboard/basic-info/erp-permissions/departments",
        "/_dashboard/basic-info/erp-permissions/roles",
        "/_dashboard/basic-info/erp-permissions/users",
        "/_dashboard/basic-info/employees/",
        "/_dashboard/basic-info/employees/$employeeId/"
      ]
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/basic-info/company-info": {
      "filePath": "_dashboard/basic-info/company-info.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/customers/create": {
      "filePath": "_dashboard/customers/create.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/production/create": {
      "filePath": "_dashboard/production/create.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/production/delete": {
      "filePath": "_dashboard/production/delete.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/production/read": {
      "filePath": "_dashboard/production/read.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/production/update": {
      "filePath": "_dashboard/production/update.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/storage/create": {
      "filePath": "_dashboard/storage/create.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/storage/delete": {
      "filePath": "_dashboard/storage/delete.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/storage/read": {
      "filePath": "_dashboard/storage/read.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/storage/update": {
      "filePath": "_dashboard/storage/update.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/customers/": {
      "filePath": "_dashboard/customers/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/basic-info/employees/create": {
      "filePath": "_dashboard/basic-info/employees/create.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/basic-info/erp-permissions/app-machine-permissions": {
      "filePath": "_dashboard/basic-info/erp-permissions/app-machine-permissions.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/basic-info/erp-permissions/department-members": {
      "filePath": "_dashboard/basic-info/erp-permissions/department-members.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/basic-info/erp-permissions/departments": {
      "filePath": "_dashboard/basic-info/erp-permissions/departments.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/basic-info/erp-permissions/roles": {
      "filePath": "_dashboard/basic-info/erp-permissions/roles.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/basic-info/erp-permissions/users": {
      "filePath": "_dashboard/basic-info/erp-permissions/users.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/customers/$customerId/projects": {
      "filePath": "_dashboard/customers/$customerId/projects.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/basic-info/employees/": {
      "filePath": "_dashboard/basic-info/employees/index.tsx",
      "parent": "/_dashboard/basic-info"
    },
    "/_dashboard/customers/$customerId/": {
      "filePath": "_dashboard/customers/$customerId/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/basic-info/employees/$employeeId/": {
      "filePath": "_dashboard/basic-info/employees/$employeeId/index.tsx",
      "parent": "/_dashboard/basic-info"
    }
  }
}
ROUTE_MANIFEST_END */
